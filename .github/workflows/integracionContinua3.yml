name: Integraci贸n Continua

on: push

jobs:
  job-build:
    runs-on: ubuntu-latest

    #Utilizar servicio redis en una maquina virtual (eso se haace a nivel job)
    #services: 
    #  redis:
    #    image: redis
    #    ports:
    #      - 6379:6379

    steps:
      #Imprimir secretos de entorno
      - name: Print secret
        run: echo "${{ secrets.TOKEN_SECRET }}"

      #Instalr node 18 desde github marketplace
      - name: setup node
        uses: actions/setup-node@v4
        with: 
          node-version: '18'

      #Instalar redis cli
      #- name: Instal redis cli
      #  run: sudo apt-get update -y && sudo apt-get install redis-tools -y

      #Se manda el test de conexi贸n de redis
      #- name: Test redis
      #  run: redis-cli -h localhost -p 6379 ping

      #Se agrega el repositorio
      - name: Checkout
        uses: actions/checkout@v4

      #Se instala dependencia npm
      - name: Instalar dependencias
        run: npm install

      #Se ejecutan los test
      - name: Run test
        run: npm run test

      #Se construye la aplicaci贸n
      - name: Build page
        run: npm run build

      - name: Debug public folder
        run: |
          ls -lah public/
          echo "Contenido de public/"
          find public/ -type f -print

      #Subir artefacto de github pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public/

      - name: Debug public folder2
        run: |
          ls -lah public/
          echo "Contenido de public/"
          find public/ -type f -print

  #Se agrega un segundo job para el despliegue, dependiente del job de build
  job-deploy:
    #Se agrega la directiva always para que un job siempre se ejecute
    #if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: job-build

    # Se agregan permisos a nivel job con la directiva permissions
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    #Variables de entorno de github pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      #Se ejecuta despliegue basado en un action de Github Marketplace
      - name:  Deploy
        id: deployment
        uses: actions/deploy-pages@v4

  #Tercer Job dependiende de del segundo Job (job-deploy) que notifica el despliegue via Slack sea correcto o incorrecto
  job-notify:
    runs-on: ubuntu latest
    needs: job-deploy
    if: always()

    steps:
      #Uso de un action ya existente
      - name: notify to slack
        uses: 8398a7/action-slack@v3

        #Dlecaraci贸n de una variable de entorno dependiente de un secreto del token de Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required

        #Se informa el status del job
        with:
          status: ${{ job.status }}
          fields: workflow,job,commit,repo,ref,author,took